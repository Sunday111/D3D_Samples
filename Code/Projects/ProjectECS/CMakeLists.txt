cmake_minimum_required(VERSION 3.5.1)
include(generate_vs_filters)
include(glob_cxx_sources)
include(cxx_version)

set(target_name ProjectECS)
set(target_desc "ECS sandbox")
set(PROJECT_${target_name} true CACHE BOOL ${target_desc})
if(NOT ${PROJECT_${target_name}})
    return()
endif()

glob_cxx_sources(${CMAKE_CURRENT_SOURCE_DIR} target_sources)
add_library(${target_name} MODULE ${target_sources})
generate_vs_filters(${target_sources})
target_include_directories(${target_name} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
target_include_directories(${target_name} PRIVATE "${root_dir}/Code/Keng/Core/include")
target_include_directories(${target_name} PRIVATE "${root_dir}/Code/Keng/ResourceSystem/include")
target_include_directories(${target_name} PRIVATE "${root_dir}/Code/Keng/WindowSystem/include")
target_include_directories(${target_name} PRIVATE "${root_dir}/Code/Keng/GraphicsCommon/include")
target_include_directories(${target_name} PRIVATE "${root_dir}/Code/Keng/Graphics/include")
target_include_directories(${target_name} PRIVATE "${root_dir}/Code/Keng/GPU/include")
target_link_libraries(${target_name} PUBLIC KengBase)
target_link_libraries(${target_name} PUBLIC KengCore)
target_link_libraries(${target_name} PUBLIC KengFileSystem)
target_link_libraries(${target_name} PUBLIC CppReflection)
target_link_libraries(${target_name} PUBLIC ECS)
add_dependencies(${target_name} KengCore)
add_dependencies(${target_name} KengResourceSystem)
add_dependencies(${target_name} KengWindowSystem)
add_dependencies(${target_name} KengGraphics)
add_dependencies(${target_name} KengGPU)

if(${KENG_KengMemory})
    target_link_libraries(${target_name} PRIVATE KengMemory)
    target_compile_definitions(${target_name} PRIVATE "-DUSE_KENG_MEMORY")
endif()

set(added_target_name ${target_name} PARENT_SCOPE)
require_cxx_version(${target_name} 17)
disable_cxx_extensions(${target_name})
